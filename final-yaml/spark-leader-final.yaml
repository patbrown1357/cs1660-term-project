apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
  generation: 1
  labels:
    app: spark-leader
  managedFields:
  - apiVersion: apps/v1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:labels:
          .: {}
          f:app: {}
      f:spec:
        f:progressDeadlineSeconds: {}
        f:replicas: {}
        f:revisionHistoryLimit: {}
        f:selector: {}
        f:strategy:
          f:rollingUpdate:
            .: {}
            f:maxSurge: {}
            f:maxUnavailable: {}
          f:type: {}
        f:template:
          f:metadata:
            f:labels:
              .: {}
              f:app: {}
          f:spec:
            f:containers:
              k:{"name":"spark-sha256-1"}:
                .: {}
                f:env:
                  .: {}
                  k:{"name":"SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED"}:
                    .: {}
                    f:name: {}
                    f:valueFrom:
                      .: {}
                      f:configMapKeyRef:
                        .: {}
                        f:key: {}
                        f:name: {}
                  k:{"name":"SPARK_MODE"}:
                    .: {}
                    f:name: {}
                    f:valueFrom:
                      .: {}
                      f:configMapKeyRef:
                        .: {}
                        f:key: {}
                        f:name: {}
                  k:{"name":"SPARK_RPC_AUTHENTICATION_ENABLED"}:
                    .: {}
                    f:name: {}
                    f:valueFrom:
                      .: {}
                      f:configMapKeyRef:
                        .: {}
                        f:key: {}
                        f:name: {}
                  k:{"name":"SPARK_RPC_ENCRYPTION_ENABLED"}:
                    .: {}
                    f:name: {}
                    f:valueFrom:
                      .: {}
                      f:configMapKeyRef:
                        .: {}
                        f:key: {}
                        f:name: {}
                  k:{"name":"SPARK_SSL_ENABLED"}:
                    .: {}
                    f:name: {}
                    f:valueFrom:
                      .: {}
                      f:configMapKeyRef:
                        .: {}
                        f:key: {}
                        f:name: {}
                f:image: {}
                f:imagePullPolicy: {}
                f:name: {}
                f:resources: {}
                f:terminationMessagePath: {}
                f:terminationMessagePolicy: {}
            f:dnsPolicy: {}
            f:restartPolicy: {}
            f:schedulerName: {}
            f:securityContext: {}
            f:terminationGracePeriodSeconds: {}
    manager: GoogleCloudConsole
    operation: Update
  - apiVersion: apps/v1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:annotations:
          .: {}
          f:deployment.kubernetes.io/revision: {}
      f:status:
        f:availableReplicas: {}
        f:conditions:
          .: {}
          k:{"type":"Available"}:
            .: {}
            f:lastTransitionTime: {}
            f:lastUpdateTime: {}
            f:message: {}
            f:reason: {}
            f:status: {}
            f:type: {}
          k:{"type":"Progressing"}:
            .: {}
            f:lastTransitionTime: {}
            f:lastUpdateTime: {}
            f:message: {}
            f:reason: {}
            f:status: {}
            f:type: {}
        f:observedGeneration: {}
        f:readyReplicas: {}
        f:replicas: {}
        f:updatedReplicas: {}
    manager: kube-controller-manager
    operation: Update
    time: "2021-11-28T15:06:37Z"
  name: spark-leader
  namespace: default
spec:
  progressDeadlineSeconds: 600
  replicas: 3
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: spark-leader
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: spark-leader
    spec:
      containers:
      - env:
        - name: SPARK_MODE
          valueFrom:
            configMapKeyRef:
              key: SPARK_MODE
              name: spark-leader-config-u4zm
        - name: SPARK_RPC_AUTHENTICATION_ENABLED
          valueFrom:
            configMapKeyRef:
              key: SPARK_RPC_AUTHENTICATION_ENABLED
              name: spark-leader-config-u4zm
        - name: SPARK_RPC_ENCRYPTION_ENABLED
          valueFrom:
            configMapKeyRef:
              key: SPARK_RPC_ENCRYPTION_ENABLED
              name: spark-leader-config-u4zm
        - name: SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED
          valueFrom:
            configMapKeyRef:
              key: SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED
              name: spark-leader-config-u4zm
        - name: SPARK_SSL_ENABLED
          valueFrom:
            configMapKeyRef:
              key: SPARK_SSL_ENABLED
              name: spark-leader-config-u4zm
        image: us.gcr.io/course-project-330721/pob6/spark@sha256:43b28d68dda98dbb3496551213f8d69a8f963547b962a7e8d7f0843e3f0131ea
        imagePullPolicy: IfNotPresent
        name: spark-sha256-1
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30